import Head from 'next/head';
import Link from 'next/link';
import styles from '@/styles/Home.module.css';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import axios from 'axios';
import { headers } from '../../../next.config';



export default function servEdit() {

    const [data, setData] = useState({
        id: '',
        name: '',
        email: ''
    });

    const [message, setMessage] = useState("");

    const router = useRouter();
    const [id] = useState(router.query.id);
    console.log(router.query.id);

    const getUser = async () => {
        if (id === undefined) {
            setMessage("ERROR: User not found!");
            return
        }
        await axios.get('http://localhost:8080/users/' + id)
            .then((response) => {
                setData(response.data.user);
            }).catch((err) => {
                if (err.response) {
                    setMessage(err.response.data.message);

                } else {
                    setMessage("ERROR: Please try again later!");
                }
            })
    }

    useEffect(() => {
        getUser();
    }, [id]);

    const valueInput = (e) => setData({ ...data, [e.target.name]: e.target.value });

    const editUser = async (e) => {

        e.preventDefault();

        const headers = {
            'headers': {
                'Content-Type': 'application/json'
            }
        }

        await axios.put("http://localhost:8080/users", data, headers)
            .then((response) => {
                setMessage(response.data.message);
            }).catch((err) => {
                if (err.response) {
                    setssage(err.response.data.message);

                } else {
                    setMessage("ERROR: Please try again later or contact...!");
                }
            })

    }

    return (
        <>
            <Head>
                <title>Form</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main >
                <form className={`${styles.form}`} onSubmit={editUser}>
                    <div>
                        <Link href={"/"}><button type='button'>List</button>{" "}</Link>
                        <Link href={`/servView/${data.id}`}><button type='button'>View</button>{" "}</Link>
                        <Link href={"/servRegister"}><button type='button' >Register</button></Link>
                    </div>

                    <h2 className={`${styles.h2}`} >Edit user</h2>

                    {message ? <p>{message}</p> : ""}

                    <input type='hidden' name="id" value={data.id} />

                    <label className={`${styles.label}`}>Name: </label>
                    <input className={`${styles.input}`} type='text' name="name" placeholder='Enter the name' onChange={valueInput} value={data.name} />

                    <label className={`${styles.label}`}>E-mail: </label>
                    <input className={`${styles.input}`} type='email' name="email" placeholder='Enter the e-mail' onChange={valueInput} value={data.email} />

                    <button className={`${styles.button}`} type='submit'>To save</button>
                </form>

            </main>
        </>
    )
}
